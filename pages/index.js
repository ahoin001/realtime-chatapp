import Head from "next/head";
import styles from "../styles/Home.module.css";

import { initializeApp } from "firebase/app";
import { getAuth, signOut } from "firebase/auth";

// react-firebase-hooks reduced boiler plate and mmade firebase interactions much more easier, use more often
import { useAuthState, useSignInWithGoogle } from "react-firebase-hooks/auth";
import { useSelections } from "react-firebase-hooks/firestore";

const firebaseConfig = {
  // config
  apiKey: process.env.FIREBASE_API_KEY,
  authDomain: process.env.FIREBASE_AUTH_DOMAIN,
  projectId: process.env.FIREBASE_PROJECT_ID,
  storageBucket: process.env.FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.FIREBASE_APP_ID,
  measurementId: process.env.FIREBASE_MEASUREMENT_ID,
};

const myApp = initializeApp(firebaseConfig);
const auth = getAuth(myApp);

// const db = getFirestore(myApp);

export default function Home() {
  // Firebase Hook to listen to change in user authentication
  const [user, loading, error] = useAuthState(auth);

  const SignIn = () => {
    const [SignInWithGoogle, user, loading, error] = useSignInWithGoogle(auth);

    return (
      <button onClick={() => SignInWithGoogle()}>Sign In With Google</button>
    );
  };

  const SignOut = () => {
    return <button onClick={() => signOut(auth)}>Sign Out</button>;
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <section>{user ? "User Signed In" : <SignIn />}</section>
        <section>{user ? <SignOut /> : "User is not signed in"}</section>
      </main>
    </div>
  );
}
